{"ast":null,"code":"var _jsxFileName = \"/home/julian/Documentos/ArqSoft2/Arquitectura_De_Software_II_Backend/frontend/src/components/List.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { getImagesByHotelId, querySolrCiudad, disponibilidadDeReserva } from './api';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List() {\n  _s();\n  const {\n    ciudad,\n    startDate,\n    finalDate\n  } = useParams();\n  const [hoteles, setHoteles] = useState([]);\n  const [imagenes, setImagenes] = useState([]);\n  const navigate = useNavigate();\n  const agregarHotel = hotel => {\n    setHoteles(prevHoteles => [...prevHoteles, hotel]);\n  };\n  const QuerySolr = async () => {\n    const promises = [];\n    try {\n      if (ciudad !== undefined) {\n        const response = await querySolrCiudad(ciudad);\n        const hotelsData = response.data;\n        for (const hotel of hotelsData) {\n          try {\n            const response3 = await disponibilidadDeReserva(startDate, finalDate, hotel.id);\n            if (response3.status() != 200) {\n              continue;\n            }\n            agregarHotel(hotel); ///ACA CHATGPT\n          } catch {}\n        }\n        for (const hotel of hoteles) {\n          promises.push(getImagesByHotelId(hotel.id).then(response2 => {\n            const imagesData = response2.data.images[0].Data;\n            const imageData = new Uint8Array(atob(imagesData).split('').map(char => char.charCodeAt(0)));\n            hotel.image = imageData;\n            return imageData;\n          }).catch(error => {\n            console.error('Error al obtener imÃ¡genes por hotel:', error);\n            return null; // O maneja el error de alguna manera\n          }));\n        }\n        const imagesArray = await Promise.all(promises);\n        setImagenes(imagesArray.filter(image => image !== null));\n        setHoteles(hotelsData);\n      }\n    } catch (error) {\n      console.error('Error al obtener hoteles:', error);\n    }\n  };\n  useEffect(() => {\n    QuerySolr();\n  }, []);\n  const handleReservar = hotelId => {\n    navigate(`/hotel/${hotelId}/${startDate}/${finalDate}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginBottom: 35\n      },\n      children: \"Resultado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), hoteles.map(hotel => /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"no-gutters\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: hotel.image && /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: `data:image/jpeg;base64,${btoa(String.fromCharCode.apply(null, hotel.image))}`,\n                alt: `Imagen de ${hotel.name}`,\n                className: \"img-fluid\",\n                style: {\n                  maxHeight: '200px',\n                  objectFit: 'cover'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"d-flex flex-column\",\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                      children: hotel.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 8\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: hotel.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"mt-auto\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    className: \"d-flex justify-content-end\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"primary\",\n                      onClick: () => handleReservar(hotel.id),\n                      children: \"Reservar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, hotel.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(List, \"Vy4di3LaWRWTJBciCHuIX4c6LP0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","getImagesByHotelId","querySolrCiudad","disponibilidadDeReserva","useParams","useNavigate","jsxDEV","_jsxDEV","List","_s","ciudad","startDate","finalDate","hoteles","setHoteles","imagenes","setImagenes","navigate","agregarHotel","hotel","prevHoteles","QuerySolr","promises","undefined","response","hotelsData","data","response3","id","status","push","then","response2","imagesData","images","Data","imageData","Uint8Array","atob","split","map","char","charCodeAt","image","catch","error","console","imagesArray","Promise","all","filter","handleReservar","hotelId","className","children","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","md","Img","src","btoa","String","fromCharCode","apply","alt","name","maxHeight","objectFit","Body","Title","Text","description","variant","onClick","_c","$RefreshReg$"],"sources":["/home/julian/Documentos/ArqSoft2/Arquitectura_De_Software_II_Backend/frontend/src/components/List.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { getImagesByHotelId ,querySolrCiudad,disponibilidadDeReserva} from './api';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\n\nfunction List() {\n  const { ciudad, startDate, finalDate } = useParams();\n  const [hoteles, setHoteles] = useState([]);\n  const [imagenes, setImagenes] = useState([]);\n\n  const navigate = useNavigate();\n\n  const agregarHotel = (hotel) => {\n    setHoteles((prevHoteles) => [...prevHoteles, hotel]);\n  };\n\n  \n  const QuerySolr = async () => {\n    const promises = [];\n\n    try {\n      if(ciudad!==undefined){\n        const response = await querySolrCiudad(ciudad);\n        const hotelsData = response.data;\n\n        for (const hotel of hotelsData) {\n          try{\n            const response3 = await disponibilidadDeReserva(startDate,finalDate,hotel.id)\n            if(response3.status()!=200){\n              continue\n            }\n            agregarHotel(hotel) ///ACA CHATGPT\n          }catch{ \n          }  \n        }\n\n      for (const hotel of hoteles) {\n        promises.push(\n          getImagesByHotelId(hotel.id)\n           .then((response2) => {\n              const imagesData = response2.data.images[0].Data;\n              const imageData = new Uint8Array(atob(imagesData).split('').map(char => char.charCodeAt(0)));\n              hotel.image = imageData;\n              return imageData;\n           })\n             .catch((error) => {\n             console.error('Error al obtener imÃ¡genes por hotel:', error);\n              return null; // O maneja el error de alguna manera\n            })\n        );\n      }\n\n      const imagesArray = await Promise.all(promises);\n      setImagenes(imagesArray.filter(image => image !== null));\n      setHoteles(hotelsData);\n    }\n\n    } catch (error) {\n      console.error('Error al obtener hoteles:', error);\n    }\n  };\n\n  useEffect(() => {\n    QuerySolr()\n\n  }, []);\n  \n  const handleReservar = (hotelId) => {\n    navigate(`/hotel/${hotelId}/${startDate}/${finalDate}`);\n  };\n  return (\n    <Container className=\"mt-5\">\n      <h2 style={{ marginBottom: 35 }}>Resultado</h2>\n      {hoteles.map((hotel) => (\n        <Row key={hotel.id} className=\"mb-4\">\n          <Col md={12}>\n            <Card className=\"h-100\">\n              <Row className=\"no-gutters\">\n                <Col md={4}>\n                  {hotel.image && (\n                    <Card.Img\n                      src={`data:image/jpeg;base64,${btoa(String.fromCharCode.apply(null, hotel.image))}`}\n                      alt={`Imagen de ${hotel.name}`}\n                      className=\"img-fluid\"\n                      style={{ maxHeight: '200px', objectFit: 'cover' }}\n                    />\n                  )}\n                </Col>\n                <Col md={8}>\n                  <Card.Body className=\"d-flex flex-column\">\n                    <Row>\n                      <Col md={4}>\n                        <Card.Title>{hotel.name}</Card.Title>\n                      </Col>\n                      <Col md={8} />\n                    </Row>\n                    <Row>\n                      <Col md={12}>\n                        <Card.Text>{hotel.description}</Card.Text>\n                      </Col>\n                    </Row>\n                    <Row className=\"mt-auto\">\n                      <Col md={12} className=\"d-flex justify-content-end\">\n                        <Button variant=\"primary\" onClick={() => handleReservar(hotel.id)}>Reservar</Button>\n                      </Col>\n                    </Row>\n                  </Card.Body>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      ))}\n    </Container>\n  );\n}\n\nexport default List;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}