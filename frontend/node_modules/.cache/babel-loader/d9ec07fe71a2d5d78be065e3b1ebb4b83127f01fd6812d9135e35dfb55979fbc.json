{"ast":null,"code":"var _jsxFileName = \"/home/julian/Documentos/ArqSoft2/Arquitectura_De_Software_II_Frontend/src/components/AddImages.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport { postImage } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddImages() {\n  _s();\n  const [imagenes, setImagenes] = useState([]);\n  const [previewImages, setPreviewImages] = useState([]);\n  const handleEliminarImagen = index => {\n    // Eliminar la imagen del estado\n    const updatedImages = [...imagenes];\n    updatedImages.splice(index, 1);\n    setImagenes(updatedImages);\n\n    // Eliminar la imagen de la previsualización\n    const updatedPreview = [...previewImages];\n    updatedPreview.splice(index, 1);\n    setPreviewImages(updatedPreview);\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/*',\n    // Solo permitir archivos de imagen\n    onDrop: acceptedFiles => {\n      // Actualizar el estado de las imágenes y generar la previsualización\n      setImagenes([...imagenes, ...acceptedFiles]);\n      const preview = [...previewImages, ...acceptedFiles.map(file => URL.createObjectURL(file))];\n      setPreviewImages(preview);\n    }\n  });\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Iterar sobre las imágenes y llamar a postImage para cada una\n      for (const imagen of imagenes) {\n        const response = await postImage(imagen, 2);\n        console.log(response);\n      }\n    } catch (error) {\n      console.error('Error al procesar las imágenes:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crear Hotel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Selecciona las imagenes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        style: dropzoneStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Arrastra y suelta im\\xE1genes aqu\\xED, o haz clic para seleccionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: previewContainerStyles,\n        children: previewImages.map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: url,\n            alt: `Imagen ${index}`,\n            style: previewImageStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEliminarImagen(index),\n            style: deleteButtonStyles,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: \"d-flex justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Crear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n// Estilos para la drop zone\n_s(AddImages, \"6qmJZJcVmOJDWTqPoyHO0UWAIzo=\", false, function () {\n  return [useDropzone];\n});\n_c = AddImages;\nconst dropzoneStyles = {\n  border: '2px dashed #cccccc',\n  borderRadius: '4px',\n  padding: '20px',\n  textAlign: 'center',\n  cursor: 'pointer',\n  marginTop: '20px'\n};\n\n// Estilos para la previsualización de imágenes\nconst previewContainerStyles = {\n  marginTop: '20px',\n  display: 'flex',\n  flexWrap: 'wrap'\n};\nconst previewImageStyles = {\n  width: '100px',\n  height: '100px',\n  objectFit: 'cover',\n  marginRight: '10px',\n  marginBottom: '10px'\n};\nconst deleteButtonStyles = {\n  position: 'absolute',\n  top: '5px',\n  right: '5px',\n  padding: '5px',\n  background: 'red',\n  color: 'white',\n  border: 'none',\n  borderRadius: '4px',\n  cursor: 'pointer'\n};\nexport default AddImages;\nvar _c;\n$RefreshReg$(_c, \"AddImages\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Button","useDropzone","postImage","jsxDEV","_jsxDEV","AddImages","_s","imagenes","setImagenes","previewImages","setPreviewImages","handleEliminarImagen","index","updatedImages","splice","updatedPreview","getRootProps","getInputProps","accept","onDrop","acceptedFiles","preview","map","file","URL","createObjectURL","handleSubmit","event","preventDefault","imagen","response","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","dropzoneStyles","previewContainerStyles","url","position","src","alt","previewImageStyles","onClick","deleteButtonStyles","md","variant","_c","border","borderRadius","padding","textAlign","cursor","marginTop","display","flexWrap","width","height","objectFit","marginRight","marginBottom","top","right","background","color","$RefreshReg$"],"sources":["/home/julian/Documentos/ArqSoft2/Arquitectura_De_Software_II_Frontend/src/components/AddImages.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport { postImage } from './api';\n\nfunction AddImages() {\n  const [imagenes, setImagenes] = useState([]);\n  const [previewImages, setPreviewImages] = useState([]);\n\n\n  const handleEliminarImagen = (index) => {\n    // Eliminar la imagen del estado\n    const updatedImages = [...imagenes];\n    updatedImages.splice(index, 1);\n    setImagenes(updatedImages);\n\n    // Eliminar la imagen de la previsualización\n    const updatedPreview = [...previewImages];\n    updatedPreview.splice(index, 1);\n    setPreviewImages(updatedPreview);\n  };\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: 'image/*', // Solo permitir archivos de imagen\n    onDrop: (acceptedFiles) => {\n      // Actualizar el estado de las imágenes y generar la previsualización\n      setImagenes([...imagenes, ...acceptedFiles]);\n      const preview = [...previewImages, ...acceptedFiles.map(file => URL.createObjectURL(file))];\n      setPreviewImages(preview);\n    },\n  });\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      // Iterar sobre las imágenes y llamar a postImage para cada una\n      for (const imagen of imagenes) {\n        const response = await postImage(imagen, 2); \n        console.log(response);\n      }\n    } catch (error) {\n\n      console.error('Error al procesar las imágenes:', error);\n    }\n  };\n  \n\n  return (\n    <Container className=\"mt-5\">\n      <h2>Crear Hotel</h2>     \n      <Row>\n          <p>Selecciona las imagenes</p>\n          <div {...getRootProps()} style={dropzoneStyles}>\n            <input {...getInputProps()} />\n            <p>Arrastra y suelta imágenes aquí, o haz clic para seleccionar</p>\n          </div>\n          <div style={previewContainerStyles}>\n            {previewImages.map((url, index) => (\n              <div key={index} style={{ position: 'relative' }}>\n                <img\n                  src={url}\n                  alt={`Imagen ${index}`}\n                  style={previewImageStyles}\n                />\n                <button\n                  onClick={() => handleEliminarImagen(index)}\n                  style={deleteButtonStyles}\n                >\n                  ×\n                </button>\n              </div>\n            ))}\n          </div>\n      </Row>\n      <Row className=\"mt-3\">\n        <Col md={6} className=\"d-flex justify-content-end\">\n          <Button variant=\"primary\" onClick={handleSubmit}>\n            Crear\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\n// Estilos para la drop zone\nconst dropzoneStyles = {\n  border: '2px dashed #cccccc',\n  borderRadius: '4px',\n  padding: '20px',\n  textAlign: 'center',\n  cursor: 'pointer',\n  marginTop: '20px',\n};\n\n// Estilos para la previsualización de imágenes\nconst previewContainerStyles = {\n  marginTop: '20px',\n  display: 'flex',\n  flexWrap: 'wrap',\n};\n\nconst previewImageStyles = {\n  width: '100px',\n  height: '100px',\n  objectFit: 'cover',\n  marginRight: '10px',\n  marginBottom: '10px',\n};\n\nconst deleteButtonStyles = {\n  position: 'absolute',\n  top: '5px',\n  right: '5px',\n  padding: '5px',\n  background: 'red',\n  color: 'white',\n  border: 'none',\n  borderRadius: '4px',\n  cursor: 'pointer',\n};\n\nexport default AddImages;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}